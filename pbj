#!/usr/bin/env bash
export PBJ_CURRENT_CATEGORY
  pbj() {
	# Get the parent dir of this script, and resolve '/pbj.py'
	# PARENT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
	PBJ_PARENT_DIR=$(dirname "$(realpath "${BASH_SOURCE[0]}")")
	pbjpy="$PBJ_PARENT_DIR/pbj.py"
	
	
	# if arg1 starts with dash, run in this shell
	if [[ ${1:0:1} == "-" ]]; then
		"$pbjpy" "$@"
		set_current_cat_tmp_file="/tmp/pbj_set_current_category_$$.tmp"
		
		if [[ -e $set_current_cat_tmp_file ]]; then
			source $set_current_cat_tmp_file
			rm $set_current_cat_tmp_file
			export $PBJ_CURRENT_CATEGORY
			if [[ -n "$PBJ_NEWDIR" ]]; then
				cd "$PBJ_NEWDIR" || return 0
				PBJ_NEWDIR=""
				#unset $PBJ_NEWDIR
			fi
		fi
		return 0
	fi
	
	# if no dash, first set this shell's terminal
	# width. This is so that the subsequent subshell
	# call gets the width of the terminal right.
	terminal_width=$(tput cols)
	"$pbjpy" "--set-term-width" $terminal_width
	
	# if successful, grab the output from a subshell
	# call and cd to the output if its a directory
	if [[ $? -eq 0 ]]; then
	    pbj_output="$($pbjpy $@)"
	    if [ -d "$pbj_output" ]; then
		    # cd to pbj_output in this shell
		    cd "$pbj_output"
	    else
		    echo "$pbj_output" 
	    fi
	fi
  }
