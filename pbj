#!/usr/bin/env bash
export PBJ_CURRENT_CATEGORY
  pbj() {
	# Get the parent dir of this script, and resolve '/pbj.py'
	# PARENT_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
	PBJ_PARENT_DIR=$(dirname "$(realpath "${BASH_SOURCE[0]}")")
	pbjpy="$PBJ_PARENT_DIR/pbj.py"
	
	# if arg1 starts with '-test' (test for change current category)
	if [[ $1 == "-test" ]]; then
		pbj_output="$($pbjpy $@)"
		read -a output_array <<< "$pbj_output"
		#output_array=($pbj_output)
		pbj_env=${output_array[0]}
		pbj_dir=$([[ -n ${output_array[1]} ]] && echo ${output_array[1]} || echo "")

		if [[ -n $pbj_env ]] && [[ -d $pbj_dir ]]; then
			export PBJ_CURRENT_CATEGORY="$pbj_env"
			cd "$pbj_dir"
			return 0
		fi
		return 1
	fi

	# if arg1 starts with '-cu' (change current category)
	if [[ $1 == "-cu" ]]; then
		pbj_output="$($pbjpy "$@")"
		read -ra output_array <<< "$pbj_output"
		pbj_env=""
		pbj_dir=""
		num_args="${#output_array[@]}"

		#TESTS: 
		echo $pbj_output
		echo ${output_array[*]}
		echo "num_args: $num_args"

		if [[ $num_args == 1 ]]; then
			pbj_env="${output_array[0]}"
			if [[ -n $pbj_env ]]; then
				export PBJ_CURRENT_CATEGORY=$pbj_env
				return 0
			else
				echo "change of current category failed"
			fi
			return 1
		elif [[ $num_args == 2 ]]; then
			pbj_env="${output_array[0]}"
			pbj_dir="${output_array[1]}"
			if [[ -n $pbj_env ]] && [[ -d $pbj_dir ]]; then
				export PBJ_CURRENT_CATEGORY=$pbj_env
				cd $pbj_dir || return 0
			else
				echo "change of current category and change directory failed"
				return 1
		fi
		return 0
	fi
	
	# if arg1 starts with dash, run in this shell
	if [[ ${1:0:1} == "-" ]]; then
		"$pbjpy" "$@"
		return 0
	fi
	
	# if no dash, first set this shell's terminal
	# width. This is so that the subsequent subshell
	# call gets the width of the terminal right.
	terminal_width=$(tput cols)
	"$pbjpy" "--set-term-width" $terminal_width
	
	# if successful, grab the output from a subshell
	# call and cd to the output if its a directory
	if [[ $? -eq 0 ]]; then
	    pbj_output="$($pbjpy $@)"
	    if [ -d "$pbj_output" ]; then
		    # cd to pbj_output in this shell
		    cd "$pbj_output"
	    else
		    echo "$pbj_output" 
	    fi
	fi
  }
