//// todo_250508.txt

I've just decided that instead of storing all key values in a dict[str,str], I
will use nested dicts. Each outer dict will be a category. inner dicts will be
the string:path key-values, like so: dict[str, dict[str, str]]. The nested
dict will be saved in a configuration file using the json module. I need to
convert the current code. I have thought of some ideas in ideas.txt. 

I am also considering abandoning the idea of the "add bookmarks via .json"
file feature.

TODO:
[x] devise rules for how commandline arguments will be structured.
[x] Look at main method logic. see that it reflects what you want to do. 
  [~] work on `if sys.argv[1] == -s` section of main if-branch
    [x] QUESTION: how can the script get the current directory?
        ANSWER: os.getcwd() returns current working directory
    [x] save_to_category() 
    [x] save_to_json()
      [x] rename to `save_to_config()`
    [x] Make bookmarks an ordered dictionary; develop systematic sorting 
      [x] Make sort_bookmarks() function
      [x] add sort_bookmarks() to load()
      [x] add sort_bookmarks() to save_to_config()
    [x] make configuration function that creates a config file if it doesn't
        exist. Just make sure the confiig file exists.
    [x] make configuration function that creates initial bookmarks file.
    [x] for line 314 if statement, make a function that checks if a path value
        is assigned to any key of the specified category. The function can be
        called value_in_category(category: str, value: str)
        --> This was already done as `value_found_in_dict(category, value)`
    [x] change config to file
    [~] change functions that use to load() function to accept bookmarks
        parameter.
         [x] value_found_in_bookmarks()
    [x] function to delete keypair from category
    [x] function to delete category from bookmarks
    [ ] function to list keys in specified category displaying a numbered list
    [ ] function to delete all ocurrances of specified path from file
        - This will be invoked by the option, 'rp'
    [ ] decide whether to keep `load_json_file()`
        - Maybe. first
